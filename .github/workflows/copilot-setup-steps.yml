name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Verify game files
        run: |
          if [ -f "index.html" ]; then
            echo "✓ Main game file found at index.html"
            ls -lh index.html
          else
            echo "✗ Main game file not found at index.html"
            echo "Available files in root directory:"
            ls -la
            exit 1
          fi
          if [ -f "style.css" ]; then
            echo "✓ Main game style found at style.css"
            ls -lh style.css
          else
            echo "✗ Main game style not found at style.css"
            echo "Available files in root directory:"
            ls -la
            exit 1
          fi

      - name: Run environment check
        run: |
          echo "Node.js version:"
          node --version
          echo "NPM version:"
          npm --version
          echo "Environment ready for Othello game development"

      - name: Test game file accessibility
        run: |
          echo "Testing if game file can be served..."
          # Simple test to ensure the file is readable and has expected content
          if [ -r "index.html" ] && [ -s "index.html" ]; then
            echo "✓ Game file is readable and non-empty"
            echo "File size: $(stat -c%s index.html) bytes"
          else
            echo "✗ Game file is not accessible or empty"
            exit 1
          fi
